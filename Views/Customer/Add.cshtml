@model BillingSystem.Models.AddViewModel
@{
}
@{
    ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"]</h2>

<form asp-controller="Customer" asp-action="Add" method="post" class="needs-validation" novalidate>
    <div class="mb-3">
        <label for="firstName" class="form-label">First Name</label>
        <input type="text" class="form-control" id="FName" name="FName" required>
        <div class="invalid-feedback">
            Please enter your first name.
        </div>
    </div>

    <div class="mb-3">
        <label for="lastName" class="form-label">Last Name</label>
        <input type="text" class="form-control" id="LName" name="LName" required>
        <div class="invalid-feedback">
            Please enter your last name.
        </div>
    </div>

    <div class="mb-3">
        <label class="form-label">Gender</label>
        <div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="Gender" id="male" value="male" required>
                <label class="form-check-label" for="male">Male</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="Gender" id="female" value="female" required>
                <label class="form-check-label" for="female">Female</label>
            </div>
        </div>
        <div class="invalid-feedback">
            Please select your gender.
        </div>
    </div>

    <div class="mb-3">
        <label for="city" class="form-label">City</label>
        <input type="text" class="form-control" id="City" name="City" required>
        <div class="invalid-feedback">
            Please enter your city.
        </div>
    </div>

    <div class="mb-3">
        <label for="phone" class="form-label">Phone</label>
        <input type="tel" class="form-control" id="Phone" name="Phone" pattern="[0-9]{10}" min="10" required>
        <div class="invalid-feedback">
            Please enter a valid 10-digit phone number.
        </div>
    </div>

    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="Email" name="Email" required>
        <div class="invalid-feedback">
            Please enter a valid email address.
        </div>
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input type="password" class="form-control" id="Password" name="Password" required>
        <div class="invalid-feedback">
            Please enter a password.
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</form>

@section Scripts {
    <script>
        // Bootstrap validation
        (function () {
            'use strict'

            var forms = document.querySelectorAll('.needs-validation')

            Array.from(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }

                    form.classList.add('was-validated')
                }, false)
            })
        })()
    </script>
}
